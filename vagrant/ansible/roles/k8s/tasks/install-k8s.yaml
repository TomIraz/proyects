---
- name: Update cache and upgrade
  apt:
    update_cache: yes
    upgrade: 'yes'
  tags: 
    - update
    
- name: Disable Swap
  shell: |
    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Add Kernel Parameters
  block:

  - name: Add containerd module loading configuration
    copy:
      dest: /etc/modules-load.d/containerd.conf
      content: |
        overlay
        br_netfilter

  - name: Load overlay kernel module
    modprobe:
      name: overlay
      state: present
  
  - name: Load br_netfilter kernel module
    modprobe:
      name: br_netfilter
      state: present

- name: Configure Kernel parameters
  block:

  - name: net.ipv4.ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
  
  - name: net.bridge.bridge-nf-call-iptables
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: '1'

  - name: net.bridge.bridge-nf-call-ip6tables
    sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: '1'

  - name: Reload Kernel changes
    ansible.builtin.command: sysctl --system

- name: Install Containerd Runtime
  block:
  
  - name: Install containerd and its dependencies
    apt:
      pkg:
      - curl
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      state: present
      update_cache: yes


  - name: Add Docker GPG key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker repository
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
      state: present
      update_cache: yes
  
  - name: Install containerd and docker
    apt:
      pkg:
      - docker.io
      - containerd.io
      state: present

  - name: Configure containerd to start using systemd as cgroup
    shell: |
      containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
      sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

  - name: Restart containerd services
    service:
      name: containerd
      state: restarted

  - name: Enable containerd service
    service:
      name: containerd
      enabled: yes


- name: Installing Kube tools
  block:

  - name: Add Kubernetes signing key
    ansible.builtin.apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes repository
    ansible.builtin.apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes

  - name: Install Kubectl, Kubeadm, and Kubelet
    apt:
      update_cache: yes
      pkg:
      - kubelet
      - kubeadm
      - kubectl
      state: present

  - name: Marcar kubelet, kubeadm y kubectl para que no sean actualizados
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
      dpkg_options: 'hold'
    loop:
      - kubelet
      - kubeadm
      - kubectl

- name: kubectl bash completion
  block:

  - name:
    apt:
      update_cache: yes
      name: bash-completion

  - name:
    blockinfile:
      path: /root/.bashrc
      block: |
        # enable bash completion in interactive shells
        if ! shopt -oq posix; then
          if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
          elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
          fi
        fi
      marker: "# {mark} ANSIBLE MANAGED BLOCK kubectl"
      create: yes

  - name:
    shell: |
      source <(kubectl completion bash)
      echo 'source <(kubectl completion bash)' >>~/.bashrc
      alias k=kubectl
      complete -o default -F __start_kubectl k
      source '{{ ansible_env.HOME }}'/.bashrc
    args:
      executable: /bin/bash