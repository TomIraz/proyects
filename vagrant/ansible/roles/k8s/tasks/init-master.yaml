---
- name: Check if Kubernetes is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kube_init_check
  ignore_errors: yes

- name: Initialize Cluster
  shell: kubeadm init --control-plane-endpoint "192.168.56.2" --pod-network-cidr=10.10.0.0/16
  when: not kube_init_check.stat.exists
  register: output

- name: Create .kube directory
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
    mode: 0755

- name: Copy kube config
  copy:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config" 
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"

- name: Display token
  block:

  - name: Extract Join Token
    shell: kubeadm token create --print-join-command
    register: join_token

  - name: Display join token
    debug:
      var: join_token.stdout_lines
  tags: token

- name: API configuration
  block:

  - name: Deploy calico network plugin
    shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/calico.yaml

  - name: Change network interface
    shell: |
      cd /etc/kubernetes/manifests/
      sed -i /s/'{{ ansible_eth0.ipv4.address }}'/'{{ ansible_eth1.ipv4.address }}'/g' *

  - name: Change kubelet IP
    shell: |
      echo "KUBELET_EXTRA_ARGS=--node-ip='{{ ansible_facts['eth1']['ipv4']['address'] }}'" >> /etc/default/kubelet
    
  - name: Kubelet restart
    service:
      name: kueblet
      state: restarted

- hosts: nodes
  become: yes
  tasks:
    - name: get token
      shell: kubeadm token create --print-join-command
      delegate_to: "control"
      register: join_command

    - name: Unir el nodo al cl√∫ster usando el token
      shell: "{{ join_command.stdout }}"
  tags: join